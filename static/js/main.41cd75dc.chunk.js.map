{"version":3,"sources":["fbase.js","audioPlayer.js","beatslist.js","upload.js","profilebutton.js","nav.js","signup.js","searchcomponent.js","searchpage.js","audiopage.js","editprofilepopup.js","profile.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","AudioPlayer","id","url","name","author","genre","bpm","index","audioKey","scale","likes","setAudioData","audioData","profileInfo","likesArray","setLikesArray","waveformRef","useRef","wavesurfer","heartref","useState","playing","setPlay","volume","setVolume","duration","setDuration","currentTime","setCurrentTime","liked","likesRef","collection","doc","username","likesCountRef","useEffect","options","container","current","waveColor","progressColor","barWidth","barRadius","barGap","responsive","height","normalize","partialRender","WaveSurfer","create","load","on","calcTime","getDuration","time","getCurrentTime","minutes","Math","floor","seconds","slice","destroy","className","onClick","playPause","onBlur","pause","ref","href","target","download","e","console","log","newLikes","items","item","includes","arr","audioIndex","indexOf","splice","set","update","BeatsList","results","setResults","get","then","snapshot","exists","data","player","map","key","Upload","userObj","isLoggedIn","audio","setAudio","file","setFile","setGenre","setKey","setScale","BPM","setBPM","title","setTitle","fileError","setFileError","fileSelection","setFileSelection","isUploaded","setIsUploaded","loading","setLoading","class","type","accept","onChange","theFile","files","fileSize","size","value","style","width","preventDefault","placeholder","selected","disabled","hidden","reader","FileReader","fileName","onload","finish","audioref","storage","child","uploadTask","putString","result","progress","bytesTransferred","totalBytes","uuid","keywordsFiltered","match","toLowerCase","getDownloadURL","authorID","user","uid","keywords","state","readAsDataURL","ProfileButton","Nav","setIsNewUser","setProfileInfo","isLoggedOut","setIsLoggedOut","src","alt","signOut","provider","GoogleAuthProvider","signInWithPopup","additionalUserInfo","isNewUser","basename","to","SignUp","history","useHistory","setUsername","displayName","setDisplayName","bio","setBio","action","htmlFor","window","location","hostname","maxlength","docRef","where","querySnapshot","empty","push","Search","searchQuery","setSearchQuery","limit","docs","forEach","audioDoc","userDoc","finalData","SearchPage","AudioPage","useParams","userName","songID","EditProfileComponent","profileData","setProfileData","setEditProfilePopup","rows","cols","maxLength","Profile","init","setInit","editProfilePopup","profile","userData","storageRef","coverFile","pictureFile","delete","imageRef","picture","cover","App","setIsLoggedIn","setUserObj","onAuthStateChanged","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41cd75dc.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport 'firebase/storage';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    // databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_URL,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID \r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst firebaseInstance = firebase;\r\nexport default firebaseInstance\r\nexport const authService = firebase.auth()\r\nexport const dbService = firebase.firestore()","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { dbService } from \"./fbase\";\r\nimport WaveSurfer from \"wavesurfer.js\";\r\n\r\nconst formWaveSurferOptions = (ref) => ({\r\n  container: ref,\r\n  waveColor: \"white\",\r\n  progressColor: \"#296C96\",\r\n  barWidth: 2,\r\n  barRadius: 1,\r\n  barGap: 2,\r\n  responsive: true,\r\n  height: 80,\r\n  // If true, normalize by the maximum peak instead of 1.0.\r\n  normalize: true,\r\n  // Use the PeakCache to improve rendering speed of large waveforms.\r\n  partialRender: true,\r\n});\r\n\r\nexport default function AudioPlayer({\r\n  id,\r\n  url,\r\n  name,\r\n  author,\r\n  genre,\r\n  bpm,\r\n  index,\r\n  audioKey,\r\n  scale,\r\n  likes,\r\n  setAudioData,\r\n  audioData,\r\n  profileInfo,\r\n  likesArray,\r\n  setLikesArray\r\n}) {\r\n  const waveformRef = useRef(null);\r\n  const wavesurfer = useRef(null);\r\n  const heartref = useRef(null);\r\n  const [playing, setPlay] = useState(false);\r\n  const [volume, setVolume] = useState(.8);\r\n  const [duration, setDuration] = useState();\r\n  const [currentTime, setCurrentTime] = useState();\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  var likesRef = dbService.collection(\"likes\").doc(profileInfo.username);\r\n  var likesCountRef = dbService.collection(\"audios\").doc(id)\r\n\r\n  useEffect(() => {\r\n    setPlay(false);\r\n    \r\n    const options = formWaveSurferOptions(waveformRef.current);\r\n    wavesurfer.current = WaveSurfer.create(options);\r\n\r\n    wavesurfer.current.load(url);\r\n\r\n    wavesurfer.current.on(\"ready\", function () {\r\n      // https://wavesurfer-js.org/docs/methods.html\r\n      // wavesurfer.current.play();\r\n      // setPlay(true);\r\n\r\n      // make sure object stillavailable when file loaded\r\n      if (wavesurfer.current) {\r\n        wavesurfer.current.setVolume(volume);\r\n        setVolume(volume);\r\n        setDuration(calcTime(wavesurfer.current.getDuration()));\r\n        const time = calcTime(wavesurfer.current.getCurrentTime());\r\n        setCurrentTime(time);\r\n      }\r\n    });\r\n\r\n    wavesurfer.current.on(\"audioprocess\", function () {\r\n      if (wavesurfer.current) {\r\n        const time = calcTime(wavesurfer.current.getCurrentTime());\r\n        setCurrentTime(time);\r\n      }\r\n    });\r\n\r\n    const calcTime = (time) => {\r\n      var minutes = Math.floor(time / 60);\r\n      var seconds = Math.floor(time - minutes * 60);\r\n      var timeString =\r\n        (\"0\" + minutes).slice(-2) + \":\" + (\"0\" + seconds).slice(-2);\r\n\r\n      return timeString;\r\n    };\r\n\r\n    wavesurfer.current.on(\"finish\", function () {\r\n      setPlay(false);\r\n    });\r\n\r\n    // Removes events, elements and disconnects Web Audio nodes.\r\n    // when component unmount\r\n    return () => wavesurfer.current.destroy();\r\n  }, [url]);\r\n\r\n  const onHeart = (e) => {\r\n    console.log(liked);\r\n    if (profileInfo) {\r\n      \r\n      let newLikes = [...likesArray,id]\r\n      let items = [...audioData];\r\n      let item = { ...items[index] };\r\n      if (!likesArray.includes(id)) {\r\n        item.likes = item.likes + 1;\r\n        items[index] = item;\r\n        setAudioData(items);\r\n        setLikesArray(newLikes)\r\n        likesCountRef.update(\"likes\",(item.likes))\r\n        likesRef.set({ likes: newLikes });\r\n      } else {\r\n        item.likes = item.likes - 1;\r\n        items[index] = item;\r\n        setAudioData(items);\r\n        var arr = [...likesArray]\r\n        var audioIndex = arr.indexOf(id);\r\n        if (audioIndex !== -1) {\r\n          arr.splice(audioIndex, 1);\r\n        }\r\n        console.log(arr);\r\n        setLikesArray(arr)\r\n        likesRef.set({likes: [...arr]});\r\n        likesCountRef.update(\"likes\",(item.likes))\r\n      }\r\n    }\r\n  };\r\n  const handlePlayPause = () => {\r\n    setPlay(!playing);\r\n    wavesurfer.current.playPause();\r\n  };\r\n  const stopAudio = () => {\r\n    setPlay(false);\r\n    wavesurfer.current.pause();\r\n  };\r\n  // const onVolumeChange = e => {\r\n    //   const { target } = e;\r\n    //   const newVolume = +target.value;\r\n    \r\n    //   if (newVolume) {\r\n      //     setVolume(newVolume);\r\n      //     wavesurfer.current.setVolume(newVolume || 1);\r\n      //   }\r\n      // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"player-shadow\">\r\n        <div className=\"player-bg\">\r\n          <div className=\"player-main\">\r\n            <div className=\"player\">\r\n              <div className=\"controls\">\r\n                <button onClick={handlePlayPause} onBlur={stopAudio}>\r\n                  {playing ? (\r\n                    <i className=\"fas fa-pause-circle fa-3x\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-play-circle fa-3x\"></i>\r\n                  )}\r\n                </button>\r\n              </div>\r\n              <div id=\"waveform\" ref={waveformRef} />\r\n              <a href={url} target=\"_blank\" download={name}>\r\n                <button className=\"controls download-btn\">\r\n                  <i className=\"fas fa-arrow-alt-circle-down fa-2x\"></i>\r\n                </button>\r\n              </a>\r\n            </div>\r\n            <div className=\"genre\">\r\n              <p>{currentTime}</p>\r\n              <p>{genre}</p>\r\n              <p>{duration}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"player-info\">\r\n            <div className=\"player-text\">\r\n              <div className=\"audio-tags\">\r\n                {audioKey == \"No Key\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <h3>{audioKey + (scale || \"\")}</h3>\r\n                )}\r\n                <h3>{bpm + \" BPM\"}</h3>\r\n              </div>\r\n              <div className=\"title-author\">\r\n                \r\n                <a href={`${process.env.PUBLIC_URL}/${author}/${id}`}>\r\n                  <h3>{name}</h3>\r\n                </a>\r\n                <h3 className=\"grey-text\">\r\n                  by&nbsp;\r\n                  <a href={`${process.env.PUBLIC_URL}/${author}`}>{author}</a>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            <div className=\"\">\r\n              <button className=\"heart-btn\" onClick={onHeart}>\r\n                {likesArray.includes(id) ? (\r\n                  <i\r\n                    className=\"fas fa-heart fa-2x heart-black heart-red\"\r\n                    ref={heartref}\r\n                  ></i>\r\n                ) : (\r\n                  <i\r\n                    className=\"fas fa-heart fa-2x heart-black\"\r\n                    ref={heartref}\r\n                  ></i>\r\n                )}\r\n                <p>{likes}</p>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState,useEffect } from 'react';\r\nimport { dbService } from \"./fbase\";\r\nimport './App.css';\r\nimport AudioPlayer from './audioPlayer'\r\n\r\n\r\n\r\nfunction BeatsList( {results, setResults, profileInfo} ) {\r\n    \r\n    \r\n    const [likesArray, setLikesArray] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        \r\n        if(profileInfo){\r\n\r\n            var likesRef = dbService.collection(\"likes\").doc(profileInfo.username);\r\n            \r\n            likesRef.get().then((snapshot) => {\r\n                if (snapshot.exists) {\r\n                    setLikesArray(snapshot.data().likes);\r\n                }\r\n            });\r\n        }\r\n        },[])\r\n        \r\n    const player = results.map((item,index)=>{\r\n        return(\r\n            <AudioPlayer \r\n            id={item.id}\r\n            key={index}\r\n            index={index}\r\n            url={item.url} \r\n            name={item.name}\r\n            author={item.author}\r\n            genre={item.genre}\r\n            audioKey={item.key}\r\n            bpm = {item.bpm}\r\n            likes={item.likes}\r\n            audioData={results}\r\n            setAudioData={setResults}\r\n            profileInfo={profileInfo}\r\n            likesArray = {likesArray}\r\n            setLikesArray = {setLikesArray}\r\n            liked = {likesArray.includes(item.id)}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>  \r\n\r\n            <div className=\"audio-page\">\r\n                {results &&\r\n                    player\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BeatsList;\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport firebaseInstance, { dbService } from \"./fbase\";\r\nimport AudioPlayer from \"./audioPlayer\";\r\nimport BeatsList from \"./beatslist\"\r\nimport { uuid } from \"uuidv4\";\r\n\r\nexport default function Upload({ userObj, profileInfo, isLoggedIn}) {\r\n  const [audio, setAudio] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [genre, setGenre] = useState(\"No Genre\");\r\n  const [key, setKey] = useState(\"No Key\");\r\n  const [scale, setScale] = useState(\"No Scale\");\r\n  const [BPM, setBPM] = useState(\"No BPM\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [fileError, setFileError] = useState(false);\r\n  const [fileSelection, setFileSelection] = useState(\"Select File\");\r\n  const [isUploaded, setIsUploaded] = useState(false);\r\n  const [loading, setLoading] = useState(0);\r\n  const [results,setResults]=useState([])\r\n  const genreHandler = (e) => {\r\n    setGenre(e.target.value);\r\n  };\r\n\r\n  const keyHandler = (e) => {\r\n    setKey(e.target.value);\r\n  };\r\n\r\n  const BPMHandler = (e) => {\r\n    setBPM(e.target.value);\r\n  };\r\n\r\n  const scaleHandler = (e) => {\r\n    setScale(e.target.value);\r\n  };\r\n\r\n  const handeTitle = (e) => {\r\n    e.preventDefault();\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const fileSize = theFile.size / 1024 / 1024;\r\n    console.log(fileSize);\r\n    if (fileSize <= 10) {\r\n      setFileError(false);\r\n      setFile(theFile);\r\n      setTitle(theFile.name);\r\n      setFileSelection(theFile.name);\r\n    } else {\r\n      setFileError(\"file size must be less than 10MB\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target);\r\n    const reader = new FileReader();\r\n    reader.fileName = file.name;\r\n\r\n    reader.onload = (finish) => {\r\n      var storageRef = firebaseInstance.storage().ref();\r\n      const audioref = storageRef.child(\"audios/\" + title);\r\n      var uploadTask = audioref.putString(reader.result, \"data_url\");\r\n\r\n      uploadTask.on(\"state_changed\", (snapshot) => {\r\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log(\"Upload is \" + progress + \"% done\");\r\n        setLoading(progress);\r\n      });\r\n      uploadTask.then((snapshot) => {\r\n        const id = uuid();\r\n        const keywords = title.match(/\\b[^\\W]+\\b/g);\r\n        const keywordsFiltered = keywords.map((value) => {\r\n          return value.toLowerCase();\r\n        });\r\n        audioref.getDownloadURL().then((value) => {\r\n          const data = {\r\n            id: id,\r\n            url: value,\r\n            name: title,\r\n            authorID: userObj.user.uid,\r\n            likes: 0,\r\n            genre: genre,\r\n            key: key,\r\n            scale: scale,\r\n            bpm: BPM,\r\n            keywords: keywordsFiltered,\r\n          }\r\n          const state = {...data,author:profileInfo.username}\r\n          console.log(state);\r\n          setResults([state])\r\n          dbService\r\n            .collection(\"audios\")\r\n            .doc(id)\r\n            .set(data)\r\n            .then((result) => {\r\n              console.log(result);\r\n            });\r\n          setAudio(value);\r\n          setIsUploaded(true);\r\n        });\r\n      });\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n  return (\r\n    <>\r\n      {isLoggedIn ?\r\n      (\r\n        <div>\r\n        <div className=\"audio-page\">\r\n          {audio && (\r\n            <>\r\n             <BeatsList results={results} setResults={setResults} profileInfo={profileInfo}/>\r\n            </>\r\n          )}\r\n        </div>\r\n        <form className=\"upload-form\">\r\n          {!isUploaded && (\r\n            <label class=\"custom-file-upload\">\r\n              <input\r\n                type=\"file\"\r\n                name=\"audio-upload\"\r\n                accept=\"audio/*\"\r\n                onChange={handleChange}\r\n                className=\"audio-upload\"\r\n                value=\"\"\r\n              />\r\n              {fileSelection}\r\n            </label>\r\n          )}\r\n          {fileError && <p>{fileError}</p>}\r\n          <div className=\"progress-bar\">\r\n            <div className=\"filler\" style={{ width: loading + \"%\" }}></div>\r\n          </div>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={handeTitle}\r\n            placeholder=\"Title\"\r\n          />\r\n          <div className=\"two-column-form\">\r\n          <input type=\"number\" placeholder=\"BPM\" onChange={BPMHandler} />\r\n          <select name=\"genre\" onChange={genreHandler}>\r\n            <option value=\"none\" selected disabled hidden>\r\n              Genre\r\n            </option>\r\n            <option value=\"Trap\">Trap</option>\r\n            <option value=\"Hip-Hop\">Hip-Hop</option>\r\n            <option value=\"House\">House</option>\r\n            <option value=\"Jazz\">Jazz</option>\r\n          </select>\r\n          </div>\r\n          <select name=\"key\" onChange={keyHandler}>\r\n            <option value=\"key\" selected disabled hidden>\r\n              Key\r\n            </option>\r\n            <option value=\"C\">C</option>\r\n            <option value=\"C#\">C#</option>\r\n            <option value=\"D\">D</option>\r\n            <option value=\"D#\">D#</option>\r\n            <option value=\"E\">E</option>\r\n            <option value=\"F\">F</option>\r\n            <option value=\"F#\">F#</option>\r\n            <option value=\"G\">G</option>\r\n            <option value=\"G#\">G#</option>\r\n            <option value=\"A\">A</option>\r\n            <option value=\"A#\">A#</option>\r\n            <option value=\"B\">B</option>\r\n          </select>\r\n          <select name=\"scale\" id=\"\" onChange={scaleHandler}>\r\n            <option value=\"scale\" selected disabled hidden>\r\n              Scale\r\n            </option>\r\n            <option value=\"\">Major</option>\r\n            <option value=\"m\">Minor</option>\r\n          </select>\r\n          {!isUploaded && (\r\n            <input\r\n              type=\"submit\"\r\n              value=\"upload\"\r\n              onClick={onSubmit}\r\n              className=\"purple-btn\"\r\n            />\r\n          )}\r\n        </form>\r\n      </div>\r\n      )\r\n      :\r\n      (\r\n          <div className=\"upload-form\">\r\n            <p className=\"center-text\">please log in to upload</p>\r\n          </div>\r\n      )\r\n\r\n      }\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\r\n\r\nexport default function ProfileButton( {profileInfo}) {\r\n      return (\r\n      <>\r\n        <a href={`${process.env.PUBLIC_URL}/${profileInfo.username}`} className=\"purple-btn\">{profileInfo.username}</a>  \r\n      </>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport ProfileButton from './profilebutton'\r\nimport firebaseInstance, {authService} from './fbase'\r\nimport {BrowserRouter as Router, Redirect, useHistory} from \"react-router-dom\"\r\nimport { useState } from \"react\";\r\n\r\nexport default function Nav({isLoggedIn, profileInfo, setIsNewUser, setProfileInfo}) {\r\n  \r\n  const[isLoggedOut, setIsLoggedOut] = useState(false)\r\n\r\n    const handleLogin = () => {\r\n        var provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        authService.signInWithPopup(provider)\r\n        .then((result) => {\r\n          if(result.additionalUserInfo.isNewUser){\r\n            setIsNewUser(true)\r\n          }\r\n          else{\r\n            setIsNewUser(false)\r\n          }\r\n        })\r\n      \r\n    }\r\n\r\n    const onLogOut = e => {\r\n      authService.signOut().then(()=>{\r\n        console.log(\"sign out successful\");\r\n        setProfileInfo(false)\r\n        setIsLoggedOut(true)\r\n      })\r\n    }\r\n\r\n    console.log(process.env.PUBLIC_URL);\r\n  return (\r\n      <nav>\r\n        <a href={`${process.env.PUBLIC_URL}/`}>\r\n          <img src={process.env.PUBLIC_URL + \"/loopnation logo-01.png\"} alt=\"\"/>\r\n        </a>\r\n        <div className=\"nav-btns\">\r\n        <a href={`${process.env.PUBLIC_URL}/upload`}>upload</a>\r\n        {profileInfo &&\r\n            <ProfileButton profileInfo={profileInfo}/>\r\n        }\r\n        {isLoggedIn ?\r\n            <button className=\"sign-in-btn\" onClick={onLogOut}>logout</button>\r\n            :\r\n            <button className=\"sign-in-btn\" onClick={handleLogin}>login</button>\r\n        }\r\n        {isLoggedOut &&\r\n          <Router basename=\"/LoopNation\">\r\n            <Redirect to=\"/\"/>\r\n          </Router>\r\n        }\r\n        </div>\r\n      </nav>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { dbService } from \"./fbase\";\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nfunction SignUp({ userObj, setIsNewUser, setProfileInfo }) {\r\n  let history = useHistory();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n\r\n  const handleDisplayName = (e) => {\r\n    e.preventDefault();\r\n    setDisplayName(e.target.value);\r\n  };\r\n  const handleUsername = (e) => {\r\n    e.preventDefault();\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handleBio = (e) => {\r\n    e.preventDefault();\r\n    setBio(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    const data = {\r\n      username: username,\r\n      displayName: displayName,\r\n      bio: bio,\r\n      id:userObj.user.uid\r\n    };\r\n    e.preventDefault();\r\n    const docRef = dbService.collection(\"users\").doc(userObj.user.uid);\r\n    const usernameRef = dbService\r\n      .collection(\"users\")\r\n      .where(\"username\", \"==\", username);\r\n\r\n    usernameRef.get().then((querySnapshot) => {\r\n      if (querySnapshot.empty) {\r\n        docRef.set(data).then(() => {\r\n          setIsNewUser(false);\r\n          setProfileInfo(data);\r\n          console.log(\"Document successfully written!\");\r\n          history.push(\"/\");\r\n        });\r\n      } else {\r\n        console.log(\"doc already exists\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form action=\"\" className=\"signup-form\">\r\n        <label htmlFor=\"\">Display Name</label>\r\n        <input type=\"text\" onChange={handleDisplayName} value={displayName} />\r\n        <br />\r\n        <label htmlFor=\"\">Username</label>\r\n        <input type=\"text\" onChange={handleUsername} value={username} />\r\n        <br />\r\n        <p>{`www.${window.location.hostname}.com${process.env.PUBLIC_URL}/${username}`}</p>\r\n        <br />\r\n        <label htmlFor=\"\">Bio</label>\r\n        <input type=\"text\" onChange={handleBio} value={bio}  maxlength=\"150\"/>\r\n        <br />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"submit\"\r\n          className=\"purple-btn\"\r\n          onClick={onSubmit}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport {dbService} from \"./fbase\"\r\nexport default function Search({setResults}) {\r\n\r\n  const[searchQuery,setSearchQuery]=useState();\r\n  const[genre,setGenre]=useState();\r\n\r\n\r\n  const searchHandler = e => {\r\n    setSearchQuery(e.target.value)\r\n  }\r\n\r\n  \r\n  const genreHandler = e => {\r\n    setGenre(e.target.value)\r\n  }\r\n\r\n  const onSearch = () => {\r\n    const keywords = searchQuery.match(/\\b[^\\W]+\\b/g);\r\n    console.log(keywords);\r\n    const searchRef = dbService.collection(\"audios\")\r\n    \r\n    const query = searchRef.where(\"keywords\", \"array-contains-any\", keywords).limit(10)\r\n\r\n    query.get().then((snapshot)=>{\r\n      var data = []\r\n\r\n      snapshot.docs.forEach((audioDoc)=>{\r\n        const authorID=audioDoc.data().authorID\r\n        dbService.collection(\"users\").doc(authorID).get().then((userDoc)=>{\r\n          let author = userDoc.data().username\r\n          const finalData={\r\n            id : audioDoc.data().id,\r\n            genre : audioDoc.data().genre,\r\n            name : audioDoc.data().name,\r\n            author : author,\r\n            likes : audioDoc.data().likes,\r\n            url : audioDoc.data().url,\r\n            key : audioDoc.data().key,\r\n            scale : audioDoc.data().scale,\r\n            bpm : audioDoc.data().bpm,\r\n            }\r\n          data = ([...data,finalData])\r\n          setResults(data)\r\n         })\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n      <div >\r\n        <form action=\"\" className=\"search-module \">\r\n          <input type=\"text\" className=\"search-bar shadow\" placeholder=\"search\" onChange={searchHandler}/>\r\n          <div className=\"genre-select shadow\">\r\n            <select id=\"myList\" name=\"genre\" onChange={genreHandler}>\r\n              <option value=\"none\" selected disabled hidden>\r\n                Genre\r\n              </option>\r\n              <option value=\"1\">Trap</option>\r\n              <option value=\"2\">Hip-Hop</option>\r\n              <option value=\"3\">House</option>\r\n              <option value=\"4\">Jazz</option>\r\n            </select>\r\n          </div>\r\n          <input className=\"submit-btn purple-btn shadow\" type=\"button\" value=\"search\" onClick={onSearch}/>\r\n        </form>\r\n      </div>\r\n  );\r\n}\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport BeatsList from \"./beatslist\";\r\nimport Nav from \"./nav\"\r\nimport Search from \"./searchcomponent\"\r\nimport {authService, dbService} from \"./fbase\"\r\n\r\n\r\nexport default function SearchPage( {userObj, profileInfo}) {\r\n  const[results,setResults] = useState([])\r\n\r\n  useEffect(()=>{\r\n    var data = []\r\n    dbService.collection(\"audios\").limit(10).get()\r\n    .then((snapshot)=>{\r\n      snapshot.forEach((audioDoc)=>{\r\n        const authorID=audioDoc.data().authorID\r\n        dbService\r\n        .collection(\"users\")\r\n        .doc(authorID)\r\n        .get()\r\n        .then((userDoc)=>{\r\n          let author = userDoc.data().username\r\n          const finalData={\r\n            id : audioDoc.data().id,\r\n            genre : audioDoc.data().genre,\r\n            name : audioDoc.data().name,\r\n            author : author,\r\n            likes : audioDoc.data().likes,\r\n            url : audioDoc.data().url,\r\n            key : audioDoc.data().key,\r\n            scale : audioDoc.data().scale,\r\n            bpm : audioDoc.data().bpm,\r\n            }\r\n          data = ([...data,finalData])\r\n          setResults(data)\r\n         });\r\n      })\r\n    })\r\n  },[])\r\n\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Search setResults={setResults}/>\r\n      <br/><br/>\r\n\r\n      <BeatsList results={results} setResults={setResults} profileInfo={profileInfo}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport \"./App.css\";\r\nimport AudioPlayer from \"./audioPlayer\";\r\nimport BeatsList from \"./beatslist\";\r\nimport { dbService } from \"./fbase\";\r\n\r\nexport default function AudioPage({ profileInfo }) {\r\n  const [results, setResults] = useState(false);\r\n\r\n  const { userName, songID } = useParams();\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"audios\")\r\n      .doc(songID)\r\n      .get()\r\n      .then((snapshot) => {\r\n        dbService\r\n          .collection(\"users\")\r\n          .where(\"username\", \"==\", userName)\r\n          .get()\r\n          .then((userDoc) => {\r\n            if (!userDoc.empty) {\r\n              let author = userDoc.docs[0].data().username;\r\n              const finalData = {\r\n                id: snapshot.data().id,\r\n                genre: snapshot.data().genre,\r\n                name: snapshot.data().name,\r\n                author: author,\r\n                likes: snapshot.data().likes,\r\n                url: snapshot.data().url,\r\n                key: snapshot.data().key,\r\n                scale: snapshot.data().scale,\r\n                bpm: snapshot.data().bpm,\r\n              };\r\n\r\n              setResults([finalData]);\r\n            }\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  console.log(results);\r\n  return (\r\n    <div className=\"audio-page\">\r\n      {results && (\r\n        <BeatsList\r\n          results={results}\r\n          setResults={setResults}\r\n          profileInfo={profileInfo}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport firebaseInstance, { authService, dbService } from \"./fbase\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst EditProfileComponent = ({ userObj, profileData, setProfileData, setEditProfilePopup}) => {\r\n  const [displayName, setDisplayName] = useState(profileData.displayName);\r\n  const [bio, setBio] = useState(profileData.bio);\r\n\r\n  const nameHandler = (e) => {\r\n    e.preventDefault();\r\n    setDisplayName(e.target.value);\r\n  };\r\n\r\n  const bioHandler = (e) => {\r\n    e.preventDefault();\r\n    setBio(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      displayName: displayName,\r\n      bio: bio,\r\n    };\r\n    dbService.collection(\"users\").doc(userObj.user.uid)\r\n    .update({displayName:displayName,bio:bio}).then(()=>{\r\n      setProfileData({ ...profileData, ...data });\r\n\r\n      setEditProfilePopup(false)\r\n    })\r\n    \r\n  };\r\n\r\n  const onClose = e => {\r\n    e.preventDefault();\r\n    setEditProfilePopup(false)\r\n  }\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"edit-profile-container\">\r\n        <form className=\"edit-profile-form\">\r\n        <button onClick={onClose}>\r\n          <i className=\"fas fa-times-circle fa-2x\"></i>\r\n          </button>\r\n          <h3>Edit Profile</h3>\r\n          <br/>\r\n          <label>\r\n          Display Name :\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Display Name\"\r\n            value={displayName}\r\n            onChange={nameHandler}\r\n            />\r\n          <br />\r\n          <label>\r\n          Bio : \r\n          </label>\r\n          <textarea\r\n            rows=\"5\"\r\n            cols=\"25\"\r\n            maxLength=\"150\"\r\n            placeholder=\"Bio\"\r\n            value={bio}\r\n            onChange={bioHandler}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"submit\"\r\n            className=\"purple-btn\"\r\n            onClick={onSubmit}\r\n          />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfileComponent;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport BeatsList from \"./beatslist\";\r\nimport EditProfileComponent from \"./editprofilepopup\";\r\nimport firebaseInstance, { authService, dbService } from \"./fbase\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Profile = ({ profileInfo, userObj }) => {\r\n  const [profileData, setProfileData] = useState([]);\r\n  const [audioData, setAudioData] = useState([]);\r\n  const [init, setInit] = useState(false);\r\n  const [editProfilePopup, setEditProfilePopup] = useState(false);\r\n\r\n  const { profile } = useParams();\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"users\")\r\n      .where(\"username\", \"==\", profile)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (!snapshot.empty) {\r\n          const userData = snapshot.docs[0].data();\r\n          setProfileData(userData);\r\n          var data = [];\r\n          dbService\r\n            .collection(\"audios\")\r\n            .where(\"authorID\", \"==\", userData.id)\r\n            .get()\r\n            .then((audio) => {\r\n              audio.forEach((audioDoc) => {\r\n                const finalData = {\r\n                  id: audioDoc.data().id,\r\n                  genre: audioDoc.data().genre,\r\n                  name: audioDoc.data().name,\r\n                  author: snapshot.docs[0].data().username,\r\n                  likes: audioDoc.data().likes,\r\n                  url: audioDoc.data().url,\r\n                  key: audioDoc.data().key,\r\n                  scale: audioDoc.data().scale,\r\n                  bpm: audioDoc.data().bpm,\r\n                };\r\n                data = [...data, finalData];\r\n              });\r\n              setAudioData(data);\r\n              setInit(true);\r\n            });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onDisplayPictureChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const size = file.size / 1024 / 1024;\r\n    const fileName = file.name;\r\n    var storageRef = firebaseInstance.storage().ref();\r\n\r\n    console.log(fileName);\r\n    console.log(size);\r\n    if (profileData.coverFile != null) {\r\n      var fileRef = storageRef.child(\r\n        userObj.user.uid + \"/picture/\" + profileData.pictureFile\r\n      );\r\n      fileRef.delete().then(() => {\r\n        console.log(\"file deleted\");\r\n      });\r\n    }\r\n    if (size < 5) {\r\n      const reader = new FileReader();\r\n      reader.onload = (finish) => {\r\n        const imageRef = storageRef.child(\r\n          userObj.user.uid + \"/picture/\" + fileName\r\n        );\r\n        var uploadTask = imageRef.putString(reader.result, \"data_url\");\r\n        uploadTask.then(() => {\r\n          imageRef.getDownloadURL().then((value) => {\r\n            dbService\r\n              .collection(\"users\")\r\n              .doc(userObj.user.uid)\r\n              .update(\"picture\", value);\r\n            setProfileData({\r\n              ...profileData,\r\n              picture: value,\r\n              pictureFile: fileName,\r\n            });\r\n          });\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const onCoverChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const size = file.size / 1024 / 1024;\r\n    const fileName = file.name;\r\n    var storageRef = firebaseInstance.storage().ref();\r\n\r\n    console.log(fileName);\r\n    console.log(size);\r\n    if (profileData.coverFile != null) {\r\n      var fileRef = storageRef.child(\r\n        userObj.user.uid + \"/cover/\" + profileData.coverFile\r\n      );\r\n      fileRef.delete().then(() => {\r\n        console.log(\"file deleted\");\r\n      });\r\n    }\r\n    if (size < 5) {\r\n      const reader = new FileReader();\r\n      reader.onload = (finish) => {\r\n        const imageRef = storageRef.child(\r\n          userObj.user.uid + \"/cover/\" + fileName\r\n        );\r\n        var uploadTask = imageRef.putString(reader.result, \"data_url\");\r\n        uploadTask.then(() => {\r\n          imageRef.getDownloadURL().then((value) => {\r\n            dbService.collection(\"users\").doc(userObj.user.uid).update({\r\n              cover: value,\r\n              coverFile: fileName,\r\n            });\r\n            setProfileData({\r\n              ...profileData,\r\n              cover: value,\r\n              coverFile: fileName,\r\n            });\r\n          });\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const onEditProfile = (e) => {\r\n    setEditProfilePopup(!editProfilePopup);\r\n  };\r\n\r\n  console.log(init);\r\n  return (\r\n    <>\r\n      {init && (\r\n        <>\r\n          {editProfilePopup && (\r\n            <>\r\n              <EditProfileComponent \r\n              userObj={userObj} \r\n              profileData={profileData} \r\n              setProfileData={setProfileData}\r\n              setEditProfilePopup={setEditProfilePopup}\r\n              />\r\n            </>\r\n          )}\r\n          <div className=\"profile-page\">\r\n            <header className=\"header\">\r\n              <div className=\"profile-elements\">\r\n                {profileInfo.username == profileData.username ? (\r\n                  <>\r\n                    <div className=\"image-container\">\r\n                      <label class=\"overlay\">\r\n                        Change Picture\r\n                        <input\r\n                          type=\"file\"\r\n                          name=\"audio-upload\"\r\n                          accept=\"image/jpeg,image/x-png\"\r\n                          className=\"audio-upload\"\r\n                          onChange={onDisplayPictureChange}\r\n                        />\r\n                      </label>\r\n                      <img\r\n                        src={profileData.picture || process.env.PUBLIC_URL +\"/generic-dp.png\"}\r\n                        alt=\"\"\r\n                        className=\"img-hover\"\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"image-container\">\r\n                      <img\r\n                        src={profileData.picture || process.env.PUBLIC_URL +\"/generic-dp.png\"}\r\n                        alt=\"\"\r\n                        className=\"img-hover\"\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )}\r\n                <div className=\"profile-text\">\r\n                  <h3>{profileData.displayName}</h3>\r\n                </div>\r\n                <div className=\"profile-text\">\r\n                  <p>{profileData.bio}</p>\r\n                </div>\r\n              </div>\r\n              {profileInfo.username == profileData.username ? (\r\n                <div className=\"cover-container\">\r\n                  <div className=\"cover-overlay\">\r\n                    <label>\r\n                      Change Cover\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"audio-upload\"\r\n                        accept=\"image/jpeg,image/x-png\"\r\n                        className=\"audio-upload\"\r\n                        onChange={onCoverChange}\r\n                      />\r\n                    </label>\r\n                    <label>\r\n                      Edit Profile\r\n                      <button onClick={onEditProfile}></button>\r\n                    </label>\r\n                  </div>\r\n                  <img className=\"img-hover\" src={profileData.cover || process.env.PUBLIC_URL +\"/loopnation-cover.png\"} />\r\n                </div>\r\n              ) : (\r\n                <div className=\"cover-container\">\r\n                  <img\r\n                    className=\"img-hover\"\r\n                    src={profileData.cover||process.env.PUBLIC_URL +\"/loopnation-cover.png\"}\r\n                  />\r\n                </div>\r\n              )}\r\n            </header>\r\n          </div>\r\n          <div className=\"audio-page\">\r\n            <BeatsList\r\n              results={audioData}\r\n              setResults={setAudioData}\r\n              profileInfo={profileInfo}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Upload from \"./upload\"\r\nimport Nav from \"./nav\"\r\nimport SignUp from './signup'\r\nimport SearchPage from \"./searchpage\"\r\nimport AudioPage from \"./audiopage\"\r\nimport Profile from \"./profile\"\r\nimport {authService, dbService} from \"./fbase\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const[isLoggedIn,setIsLoggedIn]=useState(false)\r\n  const[userObj,setUserObj]=useState([])\r\n  const[profileInfo,setProfileInfo] = useState(false)\r\n  const[isNewUser, setIsNewUser]=useState(false)\r\n  const[init, setInit] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    setInit(false)\r\n    authService.onAuthStateChanged((user)=>{\r\n      if(user){\r\n        setUserObj({user})\r\n        setIsLoggedIn(true);\r\n        var userRef = dbService.collection(\"users\").doc(user.uid)\r\n        userRef.get().then(doc=>{\r\n          setProfileInfo(doc.data())\r\n          setInit(true)\r\n        })\r\n      }\r\n      else{\r\n        setIsLoggedIn(false);\r\n        setInit(true)\r\n      }\r\n      \r\n    })\r\n  },[])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {init &&\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n      <Nav isLoggedIn={isLoggedIn} profileInfo={profileInfo} setIsNewUser={setIsNewUser} setProfileInfo={setProfileInfo}/>\r\n      <br/><br/>\r\n\r\n        <Switch>\r\n          <Route exact path={`/`}>\r\n            <SearchPage profileInfo={profileInfo}/>\r\n          </Route>\r\n          <Route path={`${process.env.PUBLIC_URL}/upload`}>\r\n            <Upload userObj={userObj} profileInfo={profileInfo} isLoggedIn={isLoggedIn}/>\r\n          </Route>\r\n          <Route path={`/sign-up`}>\r\n            <SignUp userObj={userObj} isNewUser={isNewUser} setIsNewUser={setIsNewUser} setProfileInfo={setProfileInfo}/>\r\n          </Route>\r\n          <Route exact path={`/:profile`}>\r\n            <Profile userObj={userObj} profileInfo={profileInfo} isLoggedIn={isLoggedIn} setProfileInfo={setProfileInfo}/>\r\n          </Route>\r\n          <Route path={`/:userName/:songID`}>\r\n            <AudioPage profileInfo={profileInfo}/>\r\n          </Route>\r\n        </Switch>\r\n        {isNewUser &&\r\n          <>\r\n            <Redirect to='/sign-up' />\r\n          </>\r\n        }\r\n      </Router>\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}